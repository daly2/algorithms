a tree with 5 branches per node and height 3
31 nodes total
tree 5 branches per node height log_3(n)
5^(log_3(n))leaves


My partner is Danica Meier.


ALGORITHM: (pseudo code)

    Given: array of distinct integers (c++)

    max = 0
    for each int i in arr1:
        if i > max => max = i;

    arr2 = new array (len=max);

    for each int i in arr1:
        x = arr1[i];
        arr2[x] += 1;

    arr 3 = new array ( len = len(arr1) )

    pos = 0;
    for each index in arr2:
        val = arr2[index]
        if val > 0:
            for (j=0; j < val; j++):
                arr3[pos] = index
                pos++

    return arr3

The time complexity is linear, about 3n*the value of the largest int


COUNTS:

    n = 100     >> ~285,000
    n = 1000    >> 350,000 - 530,000

589024  N=10
1.12853e+06  N=100
1.22567e+06  N=1000
2.82092e+06  N=10000
1.41628e+07  N=100000
1.32365e+08  N=1000000
Our analysis was roughly in the right direction, but we definitely
ran into problems with the issue of calculating an unpredictable number
into the equation. 